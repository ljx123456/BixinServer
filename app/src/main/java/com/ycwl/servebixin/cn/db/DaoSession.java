package com.ycwl.servebixin.cn.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.ycwl.servebixin.cn.db.db.DrinkDB;
import com.ycwl.servebixin.cn.db.db.MerchantDB;
import com.ycwl.servebixin.cn.db.db.PicturesDB;
import com.ycwl.servebixin.cn.db.db.ServePersonnelDB;
import com.ycwl.servebixin.cn.db.db.TagsDB;
import com.ycwl.servebixin.cn.db.db.UserDB;
import com.ycwl.servebixin.cn.db.db.VideosDB;

import com.ycwl.servebixin.cn.db.DrinkDBDao;
import com.ycwl.servebixin.cn.db.MerchantDBDao;
import com.ycwl.servebixin.cn.db.PicturesDBDao;
import com.ycwl.servebixin.cn.db.ServePersonnelDBDao;
import com.ycwl.servebixin.cn.db.TagsDBDao;
import com.ycwl.servebixin.cn.db.UserDBDao;
import com.ycwl.servebixin.cn.db.VideosDBDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig drinkDBDaoConfig;
    private final DaoConfig merchantDBDaoConfig;
    private final DaoConfig picturesDBDaoConfig;
    private final DaoConfig servePersonnelDBDaoConfig;
    private final DaoConfig tagsDBDaoConfig;
    private final DaoConfig userDBDaoConfig;
    private final DaoConfig videosDBDaoConfig;

    private final DrinkDBDao drinkDBDao;
    private final MerchantDBDao merchantDBDao;
    private final PicturesDBDao picturesDBDao;
    private final ServePersonnelDBDao servePersonnelDBDao;
    private final TagsDBDao tagsDBDao;
    private final UserDBDao userDBDao;
    private final VideosDBDao videosDBDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        drinkDBDaoConfig = daoConfigMap.get(DrinkDBDao.class).clone();
        drinkDBDaoConfig.initIdentityScope(type);

        merchantDBDaoConfig = daoConfigMap.get(MerchantDBDao.class).clone();
        merchantDBDaoConfig.initIdentityScope(type);

        picturesDBDaoConfig = daoConfigMap.get(PicturesDBDao.class).clone();
        picturesDBDaoConfig.initIdentityScope(type);

        servePersonnelDBDaoConfig = daoConfigMap.get(ServePersonnelDBDao.class).clone();
        servePersonnelDBDaoConfig.initIdentityScope(type);

        tagsDBDaoConfig = daoConfigMap.get(TagsDBDao.class).clone();
        tagsDBDaoConfig.initIdentityScope(type);

        userDBDaoConfig = daoConfigMap.get(UserDBDao.class).clone();
        userDBDaoConfig.initIdentityScope(type);

        videosDBDaoConfig = daoConfigMap.get(VideosDBDao.class).clone();
        videosDBDaoConfig.initIdentityScope(type);

        drinkDBDao = new DrinkDBDao(drinkDBDaoConfig, this);
        merchantDBDao = new MerchantDBDao(merchantDBDaoConfig, this);
        picturesDBDao = new PicturesDBDao(picturesDBDaoConfig, this);
        servePersonnelDBDao = new ServePersonnelDBDao(servePersonnelDBDaoConfig, this);
        tagsDBDao = new TagsDBDao(tagsDBDaoConfig, this);
        userDBDao = new UserDBDao(userDBDaoConfig, this);
        videosDBDao = new VideosDBDao(videosDBDaoConfig, this);

        registerDao(DrinkDB.class, drinkDBDao);
        registerDao(MerchantDB.class, merchantDBDao);
        registerDao(PicturesDB.class, picturesDBDao);
        registerDao(ServePersonnelDB.class, servePersonnelDBDao);
        registerDao(TagsDB.class, tagsDBDao);
        registerDao(UserDB.class, userDBDao);
        registerDao(VideosDB.class, videosDBDao);
    }
    
    public void clear() {
        drinkDBDaoConfig.clearIdentityScope();
        merchantDBDaoConfig.clearIdentityScope();
        picturesDBDaoConfig.clearIdentityScope();
        servePersonnelDBDaoConfig.clearIdentityScope();
        tagsDBDaoConfig.clearIdentityScope();
        userDBDaoConfig.clearIdentityScope();
        videosDBDaoConfig.clearIdentityScope();
    }

    public DrinkDBDao getDrinkDBDao() {
        return drinkDBDao;
    }

    public MerchantDBDao getMerchantDBDao() {
        return merchantDBDao;
    }

    public PicturesDBDao getPicturesDBDao() {
        return picturesDBDao;
    }

    public ServePersonnelDBDao getServePersonnelDBDao() {
        return servePersonnelDBDao;
    }

    public TagsDBDao getTagsDBDao() {
        return tagsDBDao;
    }

    public UserDBDao getUserDBDao() {
        return userDBDao;
    }

    public VideosDBDao getVideosDBDao() {
        return videosDBDao;
    }

}
